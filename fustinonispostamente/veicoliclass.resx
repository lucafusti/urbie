<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>